import os
import requests
import asyncio
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes

# ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶è‡¶¨‡¶Ç API ‡¶è‡¶®‡ßç‡¶°‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü
TELEGRAM_TOKEN = "7479613855:AAFoEk8FOTOADo5hcewJPdEFOaIvgKLGyFg"
API_ENDPOINT = "https://molecular-angel-itachivai-e6c91c4d.koyeb.app/up"

async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶´‡¶æ‡¶á‡¶≤ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
        file = await update.message.video.get_file()
        temp_file = f"temp_{update.update_id}.mp4"
        await file.download_to_drive(temp_file)
        
        # ‡¶´‡ßç‡¶≤‡¶æ‡¶∏‡ßç‡¶ï API-‡¶§‡ßá ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
        with open(temp_file, 'rb') as f:
            files = {'video': f}
            response = requests.post(API_ENDPOINT, files=files)
            
        # ‡¶ü‡ßá‡¶Æ‡ßç‡¶™ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
        os.remove(temp_file)
        
        # ‡¶Ø‡¶¶‡¶ø API ‡¶∞‡ßá‡¶∏‡¶™‡¶®‡ßç‡¶∏ ‡¶∏‡¶´‡¶≤ ‡¶®‡¶æ ‡¶π‡ßü
        if response.status_code != 202:
            await update.message.reply_text("‚ö†Ô∏è Processing failed to start")
            return
            
        # ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶ø‡¶Ç ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶°‡ßá‡¶ü‡¶æ ‡¶®‡¶ø‡¶®
        data = response.json()
        process_id = data['process_id']
        check_url = f"{API_ENDPOINT.rsplit('/',1)[0]}/check_status/{process_id}"
        
        # ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶ø‡¶Ç ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶ú‡¶æ‡¶®‡¶æ‡¶®
        msg = await update.message.reply_text("üîÑ Processing started...")
        
        # ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶ø‡¶Ç ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
        while True:
            status_response = requests.get(check_url, headers={'Accept': 'application/json'})
            if status_response.status_code == 200:
                result = status_response.json()
                if result['status'] == 'success':
                    await msg.edit_text(f"‚úÖ Processed!\nURL: {result['url']}")
                    break
                elif result['status'] == 'error':
                    await msg.edit_text(f"‚ùå Error: {result['message']}")
                    break
            await asyncio.sleep(5)
            
    except Exception as e:
        await update.message.reply_text(f"‚ùå Error: {str(e)}")

def main():
    # ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶¨‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®
    app = Application.builder().token(TELEGRAM_TOKEN).build()
    
    # ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
    app.add_handler(MessageHandler(filters.VIDEO, handle_video))
    
    # ‡¶¨‡¶ü ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®
    print("Bot is running...")
    app.run_polling()

if __name__ == "__main__":
    main()
